{"ast":null,"code":"import e from \"axios\";\nimport t from \"js-cookie\";\nconst r = {\n  user: {},\n  tokens: {},\n  mode: \"live\"\n};\n\nfunction n() {\n  [\"access\", \"id\", \"refresh\"].map(e => {\n    try {\n      const n = t.get(r.tokens[e + \"TokenName\"]);\n      r.tokens[e + \"Token\"] = n;\n    } catch (t) {\n      console.warn(`Problem setting ${e} token.`);\n    }\n  });\n}\n\nconst o = r.tokens,\n      i = \"https://api.userfront.com/v0/\",\n      s = /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g;\n\nfunction a(e, n, o) {\n  const i = `${o}.${r.tenantId}`;\n  n = n || {\n    secure: \"live\" === r.mode,\n    sameSite: \"Lax\"\n  }, \"refresh\" === o && (n.sameSite = \"Strict\"), t.set(i, e, n);\n}\n\nfunction c(e) {\n  t.remove(e), t.remove(e, {\n    secure: !0,\n    sameSite: \"Lax\"\n  }), t.remove(e, {\n    secure: !0,\n    sameSite: \"None\"\n  }), t.remove(e, {\n    secure: !1,\n    sameSite: \"Lax\"\n  }), t.remove(e, {\n    secure: !1,\n    sameSite: \"None\"\n  });\n}\n\nfunction u() {\n  c(r.tokens.accessTokenName), c(r.tokens.idTokenName), c(r.tokens.refreshTokenName), r.tokens.accessToken = void 0, r.tokens.idToken = void 0, r.tokens.refreshToken = void 0;\n}\n\nfunction d(e) {\n  a(e.access.value, e.access.cookieOptions, \"access\"), a(e.id.value, e.id.cookieOptions, \"id\"), e.refresh && e.refresh.value && a(e.refresh.value, e.refresh.cookieOptions, \"refresh\"), n();\n}\n\nfunction h(e) {\n  if (\"object\" == typeof window && \"object\" == typeof window.location && window.location.href && !(window.location.href.indexOf(e + \"=\") < 0)) return decodeURIComponent(window.location.href.split(e + \"=\")[1].split(\"&\")[0]);\n}\n\nfunction l(e) {\n  if (!e || \"object\" != typeof document || \"object\" != typeof window) return;\n\n  try {\n    document && window;\n  } catch (e) {\n    return;\n  }\n\n  const t = document.createElement(\"a\");\n  t.href = e, t.pathname !== window.location.pathname && window.location.assign(`${t.pathname}${t.hash}${t.search}`);\n}\n\nfunction f(e) {\n  var t, r;\n\n  if (e) {\n    if (\"string\" == typeof e) throw new Error(e);\n    if (null != e && null != (t = e.response) && null != (r = t.data) && r.message) throw new Error(e.response.data.message);\n    throw e;\n  }\n}\n\nfunction m() {\n  if (!r.tokens.idToken) return console.warn(\"Cannot define user: missing ID token\");\n  r.user = r.user || {};\n\n  const e = function (e) {\n    try {\n      const t = e.split(\".\")[1].replace(\"-\", \"+\").replace(\"_\", \"/\");\n      return JSON.parse(atob(t));\n    } catch (e) {\n      console.error(\"Problem decoding JWT payload\", e);\n    }\n  }(r.tokens.idToken),\n        t = [\"email\", \"username\", \"name\", \"image\", \"data\", \"confirmedAt\", \"createdAt\", \"updatedAt\", \"mode\", \"userId\", \"userUuid\", \"tenantId\", \"isConfirmed\"];\n\n  for (const n of t) {\n    if (\"update\" === n) return;\n    r.user[n] = e[n];\n  }\n}\n\nconst w = r.user;\n\nfunction p(e, t) {\n  try {\n    var r = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return r && r.then ? r.then(void 0, t) : r;\n}\n\nconst v = function ({}) {\n  return Promise.resolve();\n},\n      k = function () {\n  try {\n    const n = p(function () {\n      return Promise.resolve(function () {\n        try {\n          const n = t.get(r.tokens.refreshTokenName);\n          return Promise.resolve(p(function () {\n            return Promise.resolve(e.get(i + \"auth/refresh\", {\n              headers: {\n                authorization: \"Bearer \" + n\n              }\n            })).then(function ({\n              data: e,\n              status: t\n            }) {\n              if (200 !== t) throw new Error(e.message || \"Problem with request\");\n              if (e.tokens) return d(e.tokens), e;\n              throw new Error(\"Problem setting cookies\");\n            });\n          }, function (e) {\n            var t, r;\n            if (null != e && null != (t = e.response) && null != (r = t.data) && r.message) throw new Error(e.response.data.message);\n            throw e;\n          }));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }()).then(function () {\n        m();\n      });\n    }, function (e) {\n      console.warn(\"Refresh failed: \" + e.message);\n    });\n    return Promise.resolve(n && n.then ? n.then(function () {}) : void 0);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction g(e, t) {\n  try {\n    var r = e();\n  } catch (e) {\n    return t(e);\n  }\n\n  return r && r.then ? r.then(void 0, t) : r;\n}\n\nfunction P({\n  provider: e,\n  redirect: t\n}) {\n  if (!e) throw new Error(\"Missing provider\");\n  if (!r.tenantId) throw new Error(\"Missing tenant ID\");\n  let n = `https://api.userfront.com/v0/auth/${e}/login?tenant_id=${r.tenantId}&origin=${window.location.origin}`,\n      o = t || h(\"redirect\");\n  return !1 === t && (o = \"object\" == typeof document && document.location.pathname), o && (n += \"&redirect=\" + encodeURIComponent(o)), n;\n}\n\nconst y = function () {\n  try {\n    const t = function (t, n) {\n      try {\n        var o = Promise.resolve(e.get(`${i}tenants/${r.tenantId}/mode`)).then(function ({\n          data: e\n        }) {\n          E.value = e.mode || \"test\", E.reason = I(E.value), r.mode = E.value;\n        });\n      } catch (e) {\n        return n();\n      }\n\n      return o && o.then ? o.then(void 0, n) : o;\n    }(0, function () {\n      E.value = \"test\", r.mode = E.value;\n    });\n\n    return Promise.resolve(t && t.then ? t.then(function () {}) : void 0);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n      E = {\n  value: \"live\",\n  reason: void 0,\n  setMode: y\n};\n\nfunction T() {\n  const e = function (e) {\n    try {\n      const e = window.location.hostname;\n      return !(!e.match(/localhost/g) && !e.match(s));\n    } catch (e) {\n      return !0;\n    }\n  }() || !function () {\n    try {\n      return \"https:\" === window.location.protocol;\n    } catch (e) {\n      return !1;\n    }\n  }() ? \"test\" : \"live\";\n  E.value = e, E.reason = I(e), r.mode = e;\n}\n\nfunction I(e) {\n  try {\n    return \"live\" === e ? \"domain\" : \"http:\" === window.location.protocol ? \"http\" : \"https:\" !== window.location.protocol ? \"protocol\" : \"domain\";\n  } catch (e) {}\n}\n\nT(), r.user.update = function (t) {\n  try {\n    return !t || Object.keys(t).length < 1 ? Promise.resolve(console.warn(\"Missing user properties to update\")) : Promise.resolve(e.put(i + \"self\", t, {\n      headers: {\n        authorization: \"Bearer \" + r.tokens.accessToken\n      }\n    })).then(function () {\n      return Promise.resolve(k()).then(function () {\n        return r.user;\n      });\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\nlet b = [],\n    j = !1;\nvar N = {\n  addInitCallback: function (e) {\n    e && \"function\" == typeof e && b.push(e);\n  },\n  init: function (t, o = {}) {\n    if (!t) return console.warn(\"Userfront initialized without tenant ID\");\n    r.tenantId = t, o.domain && (r.domain = o.domain, e.defaults.headers.common[\"x-application-id\"] = \"https://\" + r.domain), r.tokens = r.tokens || {}, r.tokens.accessTokenName = \"access.\" + r.tenantId, r.tokens.idTokenName = \"id.\" + r.tenantId, r.tokens.refreshTokenName = \"refresh.\" + r.tenantId, n(), T(), r.tokens.idToken && m();\n\n    try {\n      b.length > 0 && b.forEach(e => {\n        e && \"function\" == typeof e && e({\n          tenantId: t\n        });\n      }), b = [];\n    } catch (e) {}\n  },\n  registerUrlChangedEventListener: function () {\n    if (!j) {\n      j = !0;\n\n      try {\n        history.pushState = (e = history.pushState, function () {\n          var t = e.apply(this, arguments);\n          return window.dispatchEvent(new Event(\"pushstate\")), window.dispatchEvent(new Event(\"urlchanged\")), t;\n        }), history.replaceState = (e => function () {\n          var t = e.apply(this, arguments);\n          return window.dispatchEvent(new Event(\"replacestate\")), window.dispatchEvent(new Event(\"urlchanged\")), t;\n        })(history.replaceState), window.addEventListener(\"popstate\", () => {\n          window.dispatchEvent(new Event(\"urlchanged\"));\n        });\n      } catch (e) {}\n\n      var e;\n    }\n  },\n  logout: function ({\n    redirect: t\n  } = {}) {\n    try {\n      return Promise.resolve(r.tokens.accessToken ? function (n, o) {\n        try {\n          var s = Promise.resolve(e.get(i + \"auth/logout\", {\n            headers: {\n              authorization: \"Bearer \" + r.tokens.accessToken\n            }\n          })).then(function ({\n            data: e\n          }) {\n            u(), !1 !== t && l(t || e.redirectTo);\n          });\n        } catch (e) {\n          return o();\n        }\n\n        return s && s.then ? s.then(void 0, o) : s;\n      }(0, function () {\n        u();\n      }) : u());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  mode: E,\n  setMode: y,\n  refresh: k,\n  login: function ({\n    method: t,\n    email: n,\n    username: o,\n    emailOrUsername: s,\n    password: a,\n    token: c,\n    uuid: u,\n    redirect: m\n  } = {}) {\n    try {\n      if (!t) throw new Error('Userfront.login called without \"method\" property.');\n\n      switch (t) {\n        case \"azure\":\n        case \"facebook\":\n        case \"github\":\n        case \"google\":\n        case \"linkedin\":\n          return Promise.resolve(function ({\n            provider: e,\n            redirect: t\n          }) {\n            if (!e) throw new Error(\"Missing provider\");\n            const r = P({\n              provider: e,\n              redirect: t\n            });\n            window.location.assign(r);\n          }({\n            provider: t,\n            redirect: m\n          }));\n\n        case \"password\":\n          return function ({\n            email: t,\n            username: n,\n            emailOrUsername: o,\n            password: s,\n            redirect: a\n          }) {\n            try {\n              return Promise.resolve(g(function () {\n                return Promise.resolve(e.post(i + \"auth/basic\", {\n                  tenantId: r.tenantId,\n                  emailOrUsername: t || n || o,\n                  password: s\n                })).then(function ({\n                  data: e\n                }) {\n                  if (e.tokens) return d(e.tokens), Promise.resolve(v(e)).then(function () {\n                    return !1 === a || l(a || h(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Please try again.\");\n                });\n              }, function (e) {\n                f(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            email: n,\n            username: o,\n            emailOrUsername: s,\n            password: a,\n            redirect: m\n          });\n\n        case \"link\":\n          return function ({\n            token: t,\n            uuid: n,\n            redirect: o\n          } = {}) {\n            try {\n              return Promise.resolve(g(function () {\n                if (t = t || h(\"token\"), n = n || h(\"uuid\"), t && n) return Promise.resolve(e.put(i + \"auth/link\", {\n                  token: t,\n                  uuid: n,\n                  tenantId: r.tenantId\n                })).then(function ({\n                  data: e\n                }) {\n                  if (e.tokens) return d(e.tokens), Promise.resolve(v(e)).then(function () {\n                    return !1 === o || l(o || h(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Problem logging in.\");\n                });\n              }, function (e) {\n                f(e);\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            token: c,\n            uuid: u,\n            redirect: m\n          });\n\n        default:\n          throw new Error('Userfront.login called with invalid \"method\" property.');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  resetPassword: function ({\n    uuid: t,\n    token: n,\n    password: o,\n    redirect: s\n  }) {\n    try {\n      return Promise.resolve(g(function () {\n        if (n = n || h(\"token\"), t = t || h(\"uuid\"), !n || !t) throw new Error(\"Missing token or uuid\");\n        return Promise.resolve(e.put(i + \"auth/reset\", {\n          tenantId: r.tenantId,\n          uuid: t,\n          token: n,\n          password: o\n        })).then(function ({\n          data: e\n        }) {\n          if (e.tokens) return d(e.tokens), !1 === s || l(s || h(\"redirect\") || e.redirectTo || \"/\"), e;\n          throw new Error(\"There was a problem resetting your password. Please try again.\");\n        });\n      }, function (e) {\n        f(e);\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  sendLoginLink: function (t) {\n    try {\n      return Promise.resolve(g(function () {\n        return Promise.resolve(e.post(i + \"auth/link\", {\n          email: t,\n          tenantId: r.tenantId\n        })).then(function ({\n          data: e\n        }) {\n          return e;\n        });\n      }, function () {\n        throw new Error(\"Problem sending link.\");\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  sendResetLink: function (t) {\n    try {\n      return Promise.resolve(g(function () {\n        return Promise.resolve(e.post(i + \"auth/reset/link\", {\n          email: t,\n          tenantId: r.tenantId\n        })).then(function ({\n          data: e\n        }) {\n          return e;\n        });\n      }, function () {\n        throw new Error(\"Problem sending link.\");\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  signup: function ({\n    method: t,\n    username: n,\n    name: o,\n    email: s,\n    password: a,\n    data: c,\n    redirect: u\n  } = {}) {\n    try {\n      if (!t) throw new Error('Userfront.signup called without \"method\" property.');\n\n      switch (t) {\n        case \"azure\":\n        case \"facebook\":\n        case \"github\":\n        case \"google\":\n        case \"linkedin\":\n          return Promise.resolve(function ({\n            provider: e,\n            redirect: t\n          }) {\n            if (!e) throw new Error(\"Missing provider\");\n            const r = P({\n              provider: e,\n              redirect: t\n            });\n            window.location.assign(r);\n          }({\n            provider: t,\n            redirect: u\n          }));\n\n        case \"password\":\n          return function ({\n            username: t,\n            name: n,\n            email: o,\n            password: s,\n            userData: a,\n            redirect: c\n          } = {}) {\n            try {\n              return Promise.resolve(g(function () {\n                return Promise.resolve(e.post(i + \"auth/create\", {\n                  tenantId: r.tenantId,\n                  username: t,\n                  name: n,\n                  email: o,\n                  password: s,\n                  data: a\n                })).then(function ({\n                  data: e\n                }) {\n                  if (e.tokens) return d(e.tokens), Promise.resolve(v(e)).then(function () {\n                    return !1 === c || l(c || h(\"redirect\") || e.redirectTo || \"/\"), e;\n                  });\n                  throw new Error(\"Please try again.\");\n                });\n              }, function (e) {\n                var t, r;\n                if (null != e && null != (t = e.response) && null != (r = t.data) && r.message) throw new Error(e.response.data.message);\n                throw e;\n              }));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }({\n            username: n,\n            name: o,\n            email: s,\n            password: a,\n            userData: c,\n            redirect: u\n          });\n\n        default:\n          throw new Error('Userfront.signup called with invalid \"method\" property.');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  store: r,\n  tokens: o,\n  accessToken: function () {\n    return r.tokens.accessToken = t.get(r.tokens.accessTokenName), r.tokens.accessToken;\n  },\n  idToken: function () {\n    return r.tokens.idToken = t.get(r.tokens.idTokenName), r.tokens.idToken;\n  },\n  redirectIfLoggedIn: function ({\n    redirect: t\n  } = {}) {\n    try {\n      if (!r.tokens.accessToken) return Promise.resolve(u());\n      if (t) return Promise.resolve(l(t));\n      if (h(\"redirect\")) return Promise.resolve(l(h(\"redirect\")));\n\n      const n = function (t, n) {\n        try {\n          var o = Promise.resolve(e.get(i + \"self\", {\n            headers: {\n              authorization: \"Bearer \" + r.tokens.accessToken\n            }\n          })).then(function ({\n            data: e\n          }) {\n            e.tenant && e.tenant.loginRedirectPath && l(e.tenant.loginRedirectPath);\n          });\n        } catch (e) {\n          return n();\n        }\n\n        return o && o.then ? o.then(void 0, n) : o;\n      }(0, function () {\n        u();\n      });\n\n      return Promise.resolve(n && n.then ? n.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  user: w\n};\nexport default N;","map":{"version":3,"sources":["../src/store.js","../src/tokens.js","../src/constants.js","../src/cookies.js","../src/url.js","../src/utils.js","../src/user.js","../src/refresh.js","../src/signon.js","../src/mode.js","../src/user.update.js","../src/index.js","../src/logout.js"],"names":["store","user","tokens","mode","accessTokenName","tenantId","idTokenName","refreshTokenName","accessToken","Cookies","get","idToken","setTokensFromCookies","map","tokenName","token","error","console","warn","apiUrl","privateIPRegex","setCookie","value","options","type","cookieName","secure","sameSite","set","removeCookie","name","remove","removeAllCookies","undefined","refreshToken","setCookiesAndTokens","access","cookieOptions","id","refresh","getQueryAttr","attrName","window","location","href","indexOf","decodeURIComponent","split","redirect","redirectToPath","data","axios","headers","authorization","tenant","loginRedirectPath","pathOrUrl","document","el","createElement","pathname","hash","search","body","recover","result","e","then","encodedPayload","replace","JSON","parse","atob","throwFormattedError","Error","response","message","setUser","idTokenPayload","getJWTPayload","propsToDefine","prop","basicRefresh","status","exchange","method","username","email","password","signupWithSSO","provider","signupWithPassword","userData","url","getProviderLink","assign","post","redirectTo","emailOrUsername","uuid","loginWithSSO","loginWithPassword","loginWithLink","origin","encodeURIComponent","put","reason","setMode","setModeSync","hn","hostname","match","err","protocol","getReason","modeValue","isTestHostname","isHttps","payload","Object","keys","length","update","initCallbacks","opts","domain","defaults","common","forEach","cb","push","isRegistered","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","addEventListener","addInitCallback","init","registerUrlChangedEventListener","logout","login","resetPassword","sendLoginLink","sendResetLink","signup","redirectIfLoggedIn"],"mappings":"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","sourcesContent":["export const store = {\n  user: {},\n  tokens: {},\n  mode: \"live\",\n};\n","import Cookies from \"js-cookie\";\n\nimport { store } from \"./store.js\";\n\nexport function setTokenNames() {\n  store.tokens = store.tokens || {};\n  store.tokens.accessTokenName = `access.${store.tenantId}`;\n  store.tokens.idTokenName = `id.${store.tenantId}`;\n  store.tokens.refreshTokenName = `refresh.${store.tenantId}`;\n}\n\n/**\n * Set and then return the access token\n */\nexport function accessToken() {\n  store.tokens.accessToken = Cookies.get(store.tokens.accessTokenName);\n  return store.tokens.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nexport function idToken() {\n  store.tokens.idToken = Cookies.get(store.tokens.idTokenName);\n  return store.tokens.idToken;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nexport function setTokensFromCookies() {\n  const tokenNames = [\"access\", \"id\", \"refresh\"];\n  tokenNames.map((tokenName) => {\n    try {\n      const token = Cookies.get(store.tokens[`${tokenName}TokenName`]);\n      store.tokens[`${tokenName}Token`] = token;\n    } catch (error) {\n      console.warn(`Problem setting ${tokenName} token.`);\n    }\n  });\n}\n\n/**\n * Export the store.tokens object\n */\nexport const tokens = store.tokens;\n\n// NOTE Commenting this out 6/11/21 because the packages it relies on (jsonwebtoken & jwks-rsa)\n// both cause a lot of bloat. If we want to verify tokens, this is a nice way to do it, but\n// we need to find libraries designed for the browser instead of node.\n/**\n * Verify the provided token\n * @param {String} token\n * @returns {Promise<void>} The provided token has been verified if `verifyToken` resolves without error\n */\n// export async function verifyToken(token) {\n//   if (!token) throw new Error(\"Missing token\");\n\n//   let publicKey;\n//   try {\n//     const decodedToken = jwt.decode(token, { complete: true });\n//     if (!decodedToken.header || !decodedToken.header.kid) {\n//       throw new Error(\"Token kid not defined\");\n//     }\n\n//     const client = new JwksClient({\n//       jwksUri: `${apiUrl}tenants/${store.tenantId}/jwks/${store.mode}`,\n//       requestHeaders: { origin: window.location.origin },\n//     });\n\n//     const key = await client.getSigningKey(decodedToken.header.kid);\n//     publicKey = key.getPublicKey();\n//   } catch (error) {\n//     throw error;\n//   }\n\n//   if (!publicKey) {\n//     throw new Error(\"Public key not found\");\n//   }\n\n//   try {\n//     jwt.verify(token, publicKey);\n//   } catch (error) {\n//     throw new Error(\"Token verification failed\");\n//   }\n\n//   return Promise.resolve();\n// }\n","export const apiUrl = `https://api.userfront.com/v0/`;\n\nexport const privateIPRegex =\n  /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g;\n","import Cookies from \"js-cookie\";\nimport { store } from \"./store.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nexport function setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nexport function removeAllCookies() {\n  removeCookie(store.tokens.accessTokenName);\n  removeCookie(store.tokens.idTokenName);\n  removeCookie(store.tokens.refreshTokenName);\n  store.tokens.accessToken = undefined;\n  store.tokens.idToken = undefined;\n  store.tokens.refreshToken = undefined;\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nexport function setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  if (tokens.refresh && tokens.refresh.value) {\n    setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  }\n  setTokensFromCookies();\n}\n","import axios from \"axios\";\n\nimport { apiUrl } from \"./constants.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nexport function getQueryAttr(attrName) {\n  if (\n    typeof window !== \"object\" ||\n    typeof window.location !== \"object\" ||\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nexport async function redirectIfLoggedIn({ redirect } = {}) {\n  if (!store.tokens.accessToken) {\n    return removeAllCookies();\n  }\n\n  // Redirect to a provided path (check options first, then url querystring)\n  if (redirect) {\n    return redirectToPath(redirect);\n  } else if (getQueryAttr(\"redirect\")) {\n    return redirectToPath(getQueryAttr(\"redirect\"));\n  }\n\n  // If no path was provided, look up the path and then redirect there\n  try {\n    const { data } = await axios.get(`${apiUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nexport function redirectToPath(pathOrUrl) {\n  // Return if no pathOrUrl, or if SSR or mobile\n  if (\n    !pathOrUrl ||\n    typeof document !== \"object\" ||\n    typeof window !== \"object\"\n  ) {\n    return;\n  }\n  try {\n    document && window;\n  } catch (error) {\n    return;\n  }\n\n  // Perform hard redirect\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.assign(path);\n  }\n}\n","/**\n * This file is for zero-dependency utilities that can\n * be imported by any other file. Don't add any imports\n * to this file other than constants\n */\n\n/**\n * Get the unverified base64 decoded payload of a JWT\n *\n * @param {String} token - JSON Web Token\n * @returns {Object}\n */\nexport function getJWTPayload(token) {\n  try {\n    const encodedPayload = token\n      .split(\".\")[1]\n      .replace(\"-\", \"+\")\n      .replace(\"_\", \"/\");\n    return JSON.parse(atob(encodedPayload));\n  } catch (error) {\n    console.error(\"Problem decoding JWT payload\", error);\n  }\n}\n\nexport function throwFormattedError(error) {\n  if (!error) return;\n  if (typeof error === \"string\") throw new Error(error);\n  if (error?.response?.data?.message) {\n    throw new Error(error.response.data.message);\n  }\n  throw error;\n}\n","import { store } from \"./store.js\";\nimport { getJWTPayload } from \"./utils.js\";\n\n/**\n * Define the store.user object based on the ID token\n */\nexport function setUser() {\n  if (!store.tokens.idToken) {\n    return console.warn(\"Cannot define user: missing ID token\");\n  }\n\n  store.user = store.user || {};\n  const idTokenPayload = getJWTPayload(store.tokens.idToken);\n\n  // Set basic user information properties from ID token\n  const propsToDefine = [\n    \"email\",\n    \"username\",\n    \"name\",\n    \"image\",\n    \"data\",\n    \"confirmedAt\",\n    \"createdAt\",\n    \"updatedAt\",\n    \"mode\",\n    \"userId\",\n    \"userUuid\",\n    \"tenantId\",\n    \"isConfirmed\",\n  ];\n  for (const prop of propsToDefine) {\n    if (prop === \"update\") return;\n    store.user[prop] = idTokenPayload[prop];\n  }\n}\n\n/**\n * Export the store.user object with the update method added\n */\nexport const user = store.user;\n","import Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\nimport { setCookiesAndTokens } from \"./cookies.js\";\nimport { store } from \"./store.js\";\n// import { getIframe, postMessageAsPromise } from \"./iframe.js\";\nimport { setUser } from \"./user.js\";\n\n/**\n * Refresh the access and ID tokens\n * - When in test mode, uses the basic refresh method\n * - For tenants without a custom SSL certificate, uses the basic refresh method\n * - For tenants with a custom SSL certificate and in live mode, uses the httpOnly refresh method\n * @returns {Promise}\n */\nexport async function refresh() {\n  try {\n    await basicRefresh();\n    setUser();\n  } catch (error) {\n    console.warn(`Refresh failed: ${error.message}`);\n  }\n}\n\n/**\n * Use a regular (non-httpOnly) cookie to refresh the access and ID tokens.\n *\n * The basic refresh method is used automatically in test mode and in live\n * mode whenever an SSL certificate has not been set up.\n */\nasync function basicRefresh() {\n  const refreshToken = Cookies.get(store.tokens.refreshTokenName);\n  try {\n    const { data, status } = await axios.get(`${apiUrl}auth/refresh`, {\n      headers: {\n        authorization: `Bearer ${refreshToken}`,\n      },\n    });\n    if (status !== 200) {\n      throw new Error(data.message || \"Problem with request\");\n    }\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      return data;\n    } else {\n      throw new Error(\"Problem setting cookies\");\n    }\n  } catch (error) {\n    if (error?.response?.data?.message) {\n      throw new Error(error.response.data.message);\n    }\n    throw error;\n  }\n}\n\n// TODO re-enable httpOnly refresh method once new endpoints are stable [06/15/21]\n/**\n *\n * The httpOnly refresh method is only available for tenants with configured\n * SSL certificates while in live mode.\n */\n// async function httpOnlyRefresh() {\n//   const iframe = getIframe();\n//   if (!iframe) return;\n//   return postMessageAsPromise({\n//     type: \"refresh\",\n//     tenantId: store.tenantId,\n//   });\n// }\n\n/**\n * Use a sessionId and nonce to set the iframe refresh token\n * @param {String} sessionId\n * @param {String} nonce\n * @returns {Promise}\n */\nexport async function exchange({ sessionId, nonce }) {\n  return;\n\n  // TODO re-enable httpOnly exchange method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // return postMessageAsPromise({\n  //   type: \"exchange\",\n  //   tenantId: store.tenantId,\n  //   payload: {\n  //     sessionId,\n  //     nonce,\n  //   },\n  // });\n}\n","import axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\nimport { setCookiesAndTokens } from \"./cookies.js\";\nimport { store } from \"./store.js\";\nimport { getQueryAttr, redirectToPath } from \"./url.js\";\nimport { exchange } from \"./refresh.js\";\nimport { throwFormattedError } from \"./utils.js\";\n\n/**\n * This file has methods for signing up and logging in\n */\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {String} method\n * @param {String} username\n * @param {String} name\n * @param {String} email\n * @param {String} password\n * @param {Object} data - Object for custom user fields\n * @param {String} redirect - path to redirect to, or if false, do not redirect\n */\nexport async function signup({\n  method,\n  username,\n  name,\n  email,\n  password,\n  data,\n  redirect,\n} = {}) {\n  if (!method) {\n    throw new Error('Userfront.signup called without \"method\" property.');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return signupWithSSO({ provider: method, redirect });\n    case \"password\":\n      return signupWithPassword({\n        username,\n        name,\n        email,\n        password,\n        userData: data,\n        redirect,\n      });\n    default:\n      throw new Error(\n        'Userfront.signup called with invalid \"method\" property.'\n      );\n  }\n}\n\n/**\n * Register a new user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction signupWithSSO({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink({ provider, redirect });\n  window.location.assign(url);\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {String} username\n * @param {String} name\n * @param {String} email\n * @param {String} password\n * @param {Object} userData - alias for the user.data object, since \"data\" is used in the response\n * @param {String} redirect - do not redirect if false, or redirect to a specific path\n */\nasync function signupWithPassword({\n  username,\n  name,\n  email,\n  password,\n  userData,\n  redirect,\n} = {}) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/create`, {\n      tenantId: store.tenantId,\n      username,\n      name,\n      email,\n      password,\n      data: userData,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Please try again.\");\n    }\n  } catch (error) {\n    if (error?.response?.data?.message) {\n      throw new Error(error.response.data.message);\n    }\n    throw error;\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {String} method\n * @param {String} email\n * @param {String} username\n * @param {String} emailOrUsername\n * @param {String} password\n * @param {String} token\n * @param {String} uuid\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nexport async function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n  redirect,\n} = {}) {\n  if (!method) {\n    throw new Error('Userfront.login called without \"method\" property.');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return loginWithSSO({ provider: method, redirect });\n    case \"password\":\n      return loginWithPassword({\n        email,\n        username,\n        emailOrUsername,\n        password,\n        redirect,\n      });\n    case \"link\":\n      return loginWithLink({ token, uuid, redirect });\n    default:\n      throw new Error('Userfront.login called with invalid \"method\" property.');\n  }\n}\n\n/**\n * Log a user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nfunction loginWithSSO({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink({ provider, redirect });\n  window.location.assign(url);\n}\n\nexport function getProviderLink({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  if (!store.tenantId) throw new Error(\"Missing tenant ID\");\n\n  let url = `https://api.userfront.com/v0/auth/${provider}/login?tenant_id=${store.tenantId}&origin=${window.location.origin}`;\n\n  let redirectTo = redirect || getQueryAttr(\"redirect\");\n  if (redirect === false) {\n    redirectTo = typeof document === \"object\" && document.location.pathname;\n  }\n  if (redirectTo) {\n    url += `&redirect=${encodeURIComponent(redirectTo)}`;\n  }\n\n  return url;\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n  redirect,\n}) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/basic`, {\n      tenantId: store.tenantId,\n      emailOrUsername: email || username || emailOrUsername,\n      password,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Please try again.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nexport async function loginWithLink({ token, uuid, redirect } = {}) {\n  try {\n    token = token || getQueryAttr(\"token\");\n    uuid = uuid || getQueryAttr(\"uuid\");\n    if (!token || !uuid) return;\n\n    const { data } = await axios.put(`${apiUrl}auth/link`, {\n      token,\n      uuid,\n      tenantId: store.tenantId,\n    });\n\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      if (redirect === false) return data;\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n      return data;\n    } else {\n      throw new Error(\"Problem logging in.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nexport async function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link.\");\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nexport async function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link.\");\n  }\n}\n\nexport async function resetPassword({ uuid, token, password, redirect }) {\n  try {\n    token = token || getQueryAttr(\"token\");\n    uuid = uuid || getQueryAttr(\"uuid\");\n    if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n    const { data } = await axios.put(`${apiUrl}auth/reset`, {\n      tenantId: store.tenantId,\n      uuid,\n      token,\n      password,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n\n      // Return if redirect is explicitly false\n      if (redirect === false) return data;\n\n      redirectToPath(\n        redirect || getQueryAttr(\"redirect\") || data.redirectTo || \"/\"\n      );\n\n      return data;\n    } else {\n      throw new Error(\n        \"There was a problem resetting your password. Please try again.\"\n      );\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n","import axios from \"axios\";\nimport { apiUrl, privateIPRegex } from \"./constants.js\";\nimport { store } from \"./store.js\";\n\n/**\n * Global mode object\n */\nexport const mode = {\n  value: \"live\",\n  reason: undefined,\n  setMode,\n};\n\nsetModeSync();\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nexport function isTestHostname(hn) {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n}\n\nexport function isHttps() {\n  try {\n    return window.location.protocol === \"https:\";\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Define the mode of operation (live or test)\n */\nexport async function setMode() {\n  try {\n    const { data } = await axios.get(`${apiUrl}tenants/${store.tenantId}/mode`);\n    mode.value = data.mode || \"test\";\n    mode.reason = getReason(mode.value);\n    store.mode = mode.value;\n  } catch (err) {\n    mode.value = \"test\";\n    store.mode = mode.value;\n  }\n}\n\n/**\n * Estimate the mode without making an API call\n */\nexport function setModeSync() {\n  const modeValue = isTestHostname() || !isHttps() ? \"test\" : \"live\";\n  mode.value = modeValue;\n  mode.reason = getReason(modeValue);\n  store.mode = modeValue;\n}\n\n/**\n * Set the reason for the mode\n * - http\n * - domain\n */\nfunction getReason(mode) {\n  try {\n    if (mode === \"live\") {\n      return \"domain\";\n    }\n    if (window.location.protocol === \"http:\") {\n      return \"http\";\n    } else if (window.location.protocol !== \"https:\") {\n      return \"protocol\";\n    } else {\n      return \"domain\";\n    }\n  } catch (error) {}\n}\n","/**\n * user.update is refactored into its own file to avoid a circular dependency\n * between Userfront.refresh() [which requires setUser()]\n * and Userfront.user.update() [which requires refresh()].\n */\n\nimport axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\nimport { refresh } from \"./refresh.js\";\nimport { store } from \"./store.js\";\n\n/**\n * Update the user record on Userfront\n * @param {Object} payload User properties to update e.g. { name: 'John Doe' }\n */\nexport async function update(payload) {\n  if (!payload || Object.keys(payload).length < 1) {\n    return console.warn(\"Missing user properties to update\");\n  }\n\n  // Make request to update the user\n  await axios.put(`${apiUrl}self`, payload, {\n    headers: {\n      authorization: `Bearer ${store.tokens.accessToken}`,\n    },\n  });\n\n  // Refresh the access and ID tokens, and set the store.user object from the ID token\n  await refresh();\n\n  return store.user;\n}\n\n/**\n * Add the update method to the store.user object\n */\nstore.user.update = update;\n","import axios from \"axios\";\nimport { store } from \"./store.js\";\nimport {\n  tokens,\n  accessToken,\n  idToken,\n  setTokensFromCookies,\n  setTokenNames,\n} from \"./tokens\";\nimport { redirectIfLoggedIn } from \"./url.js\";\nimport {\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n} from \"./signon.js\";\nimport { logout } from \"./logout.js\";\nimport { mode, setMode, setModeSync } from \"./mode.js\";\n// import { setIframe } from \"./iframe.js\";\nimport { user, setUser } from \"./user.js\";\nimport \"./user.update.js\";\nimport { refresh } from \"./refresh.js\";\n\nlet initCallbacks = [];\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nfunction init(tenantId, opts = {}) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n\n  store.tenantId = tenantId;\n\n  if (opts.domain) {\n    store.domain = opts.domain;\n    axios.defaults.headers.common[\n      \"x-application-id\"\n    ] = `https://${store.domain}`;\n  }\n\n  setTokenNames();\n  // setIframe(); // TODO re-enable when iframe is needed\n  setTokensFromCookies();\n  setModeSync();\n\n  if (store.tokens.idToken) {\n    setUser();\n  }\n\n  try {\n    if (initCallbacks.length > 0) {\n      initCallbacks.forEach((cb) => {\n        if (!cb || typeof cb !== \"function\") return;\n        cb({ tenantId });\n      });\n    }\n    initCallbacks = [];\n  } catch (error) {}\n}\n\n/**\n * Add a callback function to be called upon Userfront.init()\n * @param {Function} cb\n */\nfunction addInitCallback(cb) {\n  if (!cb || typeof cb !== \"function\") return;\n  initCallbacks.push(cb);\n}\n\n/**\n\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nfunction registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\n/**\n * EXPORTS\n */\n\nexport default {\n  // index\n  addInitCallback,\n  init,\n  registerUrlChangedEventListener,\n\n  //logout\n  logout,\n\n  // mode\n  mode,\n  setMode,\n\n  // refresh\n  refresh,\n\n  // signon\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n\n  // store\n  store,\n\n  // tokens\n  tokens,\n  accessToken,\n  idToken,\n\n  // url\n  redirectIfLoggedIn,\n\n  // user\n  user,\n\n  // utils\n};\n","import axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\n\nimport { getIframe, postMessageAsPromise } from \"./iframe.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\nimport { redirectToPath } from \"./url\";\n\n/**\n * Log a user out and redirect to the logout path.\n */\nexport async function logout({ redirect } = {}) {\n  if (!store.tokens.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.tokens.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    if (redirect === false) return;\n    redirectToPath(redirect || data.redirectTo);\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n// TODO re-enable exchange method once new endpoints are stable [06/15/21]\n// --------------------------\n// const iframe = getIframe();\n// if (!iframe) return;\n// try {\n//   const { data } = await postMessageAsPromise({\n//     type: \"logout\",\n//     tenantId: store.tenantId,\n//   });\n//   removeAllCookies();\n//   setTokensFromCookies();\n//   redirectToPath(data.redirectTo || \"/\");\n// } catch (error) {\n//   removeAllCookies();\n//   redirectToPath(\"/\");\n// }\n"]},"metadata":{},"sourceType":"module"}